%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4510294d23d964fe59443526f1ca7c4b, type: 3}
  m_Name: Configuration
  m_EditorClassIdentifier: 
  m_displayName: Configuration
  m_hierarchyName: Configuration
  m_context: {fileID: 11400000, guid: dd8852ea5af635c45a385bd4b763b25e, type: 2}
  m_markdownFile: {fileID: 0}
  m_priority: 1005
  m_overrideMarkdownText: "# Project Configuration\n\nTo make this project functional
    in the editor and on a device, some initial setup is required.\n\n## Application
    Configuration\n\nTo run the project and use platform services, create an application
    on the [Meta Quest Developer Center](https://developers.meta.com/horizon/).\n\nFor
    device operation, a Quest application is needed, and for editor operation, a
    PCVR application is required. The following sections describe the necessary configuration.\n\n###
    Data Use Checkup\n\nTo use platform features, request the necessary data in the
    _Data Use Checkup_ section of the application.\n\n![data use checkup](./Media/dashboard/datausecheckup.png
    \"Data use Checkup\")\n\nConfigure the required Data Usage:\n* **User Id**: Avatars,
    Destinations, Multiplayer, Oculus Username, Friends Invites, User Invite Others\n*
    **In-App Purchases**: IAP\n* **User Profile**: Avatars\n* **Avatars**: Avatars\n*
    **Deep Linking**: Destinations\n* **Friends**: Multiplayer\n* **Blocked Users**:
    Other - we use the Blocking API\n* **Invites**: Multiplayer, Friends Invite,
    User Invite Others\n\n### Add-ons\n\nThis application integrates in-app purchases
    (IAP) to demonstrate durable and consumable purchases. Here are the expected
    configurations.\n\nFirst, open the Add-ons from the Platform Services:\n\n![Platform
    Services Add-ons](./Media/dashboard/dashboard_addons_platformservices.png \"Platform
    Services Add-ons\")\n\nThen, set up the different Add-ons.\n\n![Add-ons](./Media/dashboard/dashboard_addons.png
    \"Add-ons\")\n\nWe created 3 durable SKUs, which can be purchased once, for the
    icons. We also created 1 consumable SKU, which can be purchased multiple times,
    for the pet cat.\n\n### Destinations\n\nThis application uses Destination configuration
    to enable users to invite friends to the same arenas and launch the application
    together.\n\nFirst, open the Destinations from the Platform Services:\n\n![Platform
    Services Destinations](./Media/dashboard/dashboard_destinations_platformservices.png
    \"Platform Services Destinations\")\n\nThen, set up the different destinations.\n\n![Destinations](./Media/dashboard/dashboard_destinations.png
    \"Destinations\")\n\n#### Main Menu\n\nThe MainMenu destination is unique to
    the user, where no other player can join. It is set up as follows:\n\n![Destination
    Main Menu](./Media/dashboard/dashboard_destination_mainmenu.png \"Destination
    Main Menu\")\n\nThe deeplink type is set to DISABLED, preventing users from joining
    this destination together.\n\n#### Arenas\n\nDifferent Arenas exist for each
    region:\n\n![Destination NA](./Media/dashboard/dashboard_destination_na.png \"Destination
    NA\")\n\nThis example is for the North American region. The deeplink type is
    ENABLE, and the deeplink data specifies the Photon region. The deeplink message
    format is specific to our project. The Group Launch capacity is set to a maximum
    of 6 players per Arena.\n\nHere is a table for destination settings:\n\n<div
    style=\"margin: auto; padding: 10pt;\">\n<table>\n<tr>\n    <th>Destination</th>\n   
    <th>API Name</th>\n    <th>Deeplink Message</th>\n</tr>\n<tr>\n    <td><b>Main
    Menu</b></td>\n\t<td>MainMenu</td>\n\t<td><i>N/A</i></td>\n</tr>\n<tr>\n\t<td><b>North
    America</b></td>\n\t<td>Arena</td>\n\t<td>{\"Region\":\"usw\"}</td>\n</tr>\n<tr>\n   
    <td><b>South America</b></td>\n\t<td>ArenaSA</td>\n\t<td>{\"Region\":\"sa\"}</td>\n</tr>\n<tr>\n\t<td><b>Japan</b></td>\n\t<td>ArenaJP</td>\n\t<td>{\"Region\":\"jp\"}</td>\n</tr>\n<tr>\n   
    <td><b>Europe</b></td>\n\t<td>ArenaEU</td>\n\t<td>{\"Region\":\"eu\"}</td>\n</tr>\n<tr>\n\t<td><b>Australia</b></td>\n\t<td>ArenaAU</td>\n\t<td>{\"Region\":\"au\"}</td>\n</tr>\n<tr>\n   
    <td><b>Asia</b></td>\n\t<td>ArenaAsia</td>\n\t<td>{\"Region\":\"asia\"}</td>\n</tr>\n</table>\n</div>\n\n###
    Set the Application ID\n\nSet the application ID in Unity.\n\nThe identifier
    (__App ID__) is found in the _API_ section.\n\n![Application API](./Media/dashboard/dashboard_api.png
    \"Application API\")\n\nPlace it in [Assets/Resources/OculusPlatformSettings.asset](../Assets/Resources/OculusPlatformSettings.asset).\n\n![Oculus
    Platform Settings Menu](./Media/editor/oculusplatformsettings_menu.png \"Oculus
    Platform Settings Menu\")\n\n![Oculus Platform Settings](./Media/editor/oculusplatformsettings.png
    \"Oculus Platform Settings\")\n\n## Photon Configuration\n\nTo get the sample
    working, configure Photon with your account and applications. The Photon base
    plan is free.\n- Visit [photonengine.com](https://www.photonengine.com) and [create
    an account](https://doc.photonengine.com/realtime/current/getting-started/obtain-your-app-id).\n-
    From your Photon dashboard, click \"Create A New App.\"\n  - Create 2 apps: \"Realtime\"
    and \"Voice.\"\n- Fill out the form, setting the type to \"Photon Realtime,\"
    then click Create.\n- Fill out the form, setting the type to \"Photon Voice,\"
    then click Create.\n\nYour new app will now show on your Photon dashboard. Click
    the App ID to reveal the full string and copy the value for each app.\n\nOpen
    your Unity project and paste your Realtime App ID in [Assets/Photon/Resources/PhotonAppSettings.asset](../Assets/Photon/Resources/PhotonAppSettings.asset).\n\n![Photon
    App Settings Location](./Media/editor/photonappsettings_location.png \"Photon
    App Settings Location\")\n\n![Photon App Settings](./Media/editor/photonappsettings.png
    \"Photon App Settings\")\n\nSet the Voice App Id on the VoiceRecorder prefab:\n\n![Photon
    Voice Recorder Location](./Media/editor/photonvoicerecorder_location.png \"Photon
    Voice Recorder Location\")\n\n![Photon Voice Settings](./Media/editor/photonvoicesetting.png
    \"Photon Voice Settings\")\n\n### Additional Setup for Realtime\n\nTo allow players
    to play in different regions with reduced latency, we used the different regions
    Photon provides. To simplify the project, we limited the number of regions used.
    Whitelist the regions used by the application.\n\n![Photon Whitelist](./Media/photon_whitelist.png
    \"Photon Whitelist\")\n\nThe Photon Realtime transport should now work. Verify
    network traffic on your Photon account dashboard.\n\n## Upload to Release Channel\n\nTo
    use platform features, upload an initial build to a release channel. For instructions,
    visit the [developer center](https://developers.meta.com/horizon/resources/publish-release-channels-upload/).
    To test with other users, add them to the channel; more information is in the
    [Add Users to Release Channel](https://developers.meta.com/horizon/resources/publish-release-channels-add-users/)
    topic.\n\nOnce the initial build is uploaded, you can use any development build
    with the same application ID; there is no need to upload every build to test
    local changes.\n"
  m_overrideMarkdownRoot: .\Documentation/
