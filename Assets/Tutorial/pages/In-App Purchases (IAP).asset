%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4510294d23d964fe59443526f1ca7c4b, type: 3}
  m_Name: In-App Purchases (IAP)
  m_EditorClassIdentifier: 
  m_displayName: In-App Purchases (IAP)
  m_hierarchyName: In-App Purchases (IAP)
  m_context: {fileID: 11400000, guid: 7ca7df8601dfca84599706baf796b445, type: 2}
  m_markdownFile: {fileID: 0}
  m_priority: 1006
  m_overrideMarkdownText: '# In-App Purchases (IAP)

    

    To show how to integrate
    IAP into a project, we created a simple store in Ultimate Gloveball.

    

    In
    the store, you can buy a permanent icon (durable) or pet cats that need repurchasing
    after use (consumable).

    

    ![Store](./Media/mainmenu_store.png)

    ![Store
    Purchase Flow](./Media/mainmenu_store_flow.png)

    

    ## Implementation

    

    Our
    implementation is based on the [IAP developer resource](https://developers.meta.com/horizon/documentation/unity/ps-iap/).

    

    We
    use a game-agnostic [IAPManager](../Assets/UltimateGloveBall/Scripts/App/IAPManager.cs)
    to handle the platform''s IAP logic. It manages fetching product and purchase
    information and consuming purchases for consumables. This provides reusable logic
    for any project implementing IAP. We added product categorization to easily access
    all products in a category.

    

    The [StoreMenuController](../Assets/UltimateGloveBall/Scripts/MainMenu/StoreMenuController.cs)
    manages buying products and consuming consumable purchases. Icons are loaded
    using product data from the IAPManager.

    

    The logic to fetch product
    and purchase information is in the [UBGApplication](../Assets/UltimateGloveBall/Scripts/App/UGBApplication.cs)
    initialization code. Here, we fetch consumables and durable products with their
    associated categories.

    

    ## Configuration

    

    Refer to the
    [Add-ons section of the Configuration page](Configuration.md#add-ons) for details.

'
  m_overrideMarkdownRoot: .\Documentation/
